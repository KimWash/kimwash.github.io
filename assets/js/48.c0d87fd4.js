(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{391:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"이진-탐색-트리"}},[s._v("이진 탐색 트리")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("트리 중 이진 탐색 트리는 아래와 같은 조건을 만족하는 트리다.")]),s._v(" "),t("ul",[t("li",[s._v("왼쪽 서브트리는 키보다 작은 값을 갖는 노드로 구성되어 있다.")]),s._v(" "),t("li",[s._v("오른쪽 서브트리는 키보다 큰 값을 갖는 노드로 구성되어 있다.")])])]),s._v(" "),t("li",[t("p",[s._v("탐색 과정")]),s._v(" "),t("ul",[t("li",[s._v("루트와 주어진 키 비교")]),s._v(" "),t("li",[s._v("루트보다 작다면 왼쪽, 크다면 오른쪽 서브트리로 이동")]),s._v(" "),t("li",[s._v("루트와 같다면 종료")])])]),s._v(" "),t("li",[t("p",[s._v("중위순회를 통해 데이터 정렬 효과 있음")])]),s._v(" "),t("li",[t("p",[s._v("성능 특성")]),s._v(" "),t("ul",[t("li",[s._v("평균: O("),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",[t("semantics",[t("mrow",[t("mi",[s._v("log")]),t("mo",[s._v("⁡")]),t("mi",[s._v("N")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\\log N")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),t("span",{staticClass:"mop"},[s._v("lo"),t("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),t("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[s._v("N")])])])]),s._v(")")]),s._v(" "),t("li",[s._v("최악: O(N)\n"),t("ul",[t("li",[s._v("정렬/역순/최대최소가 번갈아 나타나는 경우")]),s._v(" "),t("li",[s._v("최악의 경우를 방지하기 위해 균형을 맞춰준다.")])])])])]),s._v(" "),t("li",[t("p",[s._v("ADL로 구현")]),s._v(" "),t("ul",[t("li",[s._v("올바른 트리가 이미 존재한다고 가정하자.")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("binaryTreeSearch(T, search_key)\n\tx <- T;\n\twhile (x != null) do {\n\t\tif (x.key > search_key) then x <- x.left;\n\t\telse if (x.key < search_key) then x <- x.right;\n\t\telse return x;\n\t}\n\treturn null;\nend binaryTreeSearch()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("파이썬 코드로 구현")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("binaryTreeSearch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" search_key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\tx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" T\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" null"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" search_key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" search_key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);